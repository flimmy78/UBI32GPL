#
# Defines for POSIX commands shipped as part of the system.
#
ifndef NO_SHELL_OVERRIDE
SHELL := bash
endif
AWK := awk
CAT := cat
CP := cp
CPP := gcc -E
GREP := grep
GZIP := gzip
INSTALL := install
LN := ln
MKDIR := mkdir
MV := mv
RM := rm -f
RMDIR := rm -rf
SED := sed
TOUCH := touch

#
# Here we do a little work to find out if we're on Linux or Cygwin. If "find" is the
# DOS version, we can't use it. So we try calling find and see what results we get.
#
ifeq ($(strip $(shell find . -maxdepth 0 2>/dev/null)),.)
#
# "find" is the Linux/Cygwin version - just use it.
#
	FIND := find
else
#
# We're using Cygwin, and Windows finds the DOS "find" before the
# Cygwin version. Use our workaround - call gfind instead, which
# is exactly the same as find but with no name conflict.
#
	FIND := gfind
endif

#
# This will be overridden if the installer tool adds an environment variable for it.
# Also, on a Linux system this will still work, because perl will ignore the bad -I flags.
#
UBICOM_TOOLCHAIN_DIR := /cygdrive/C/Ubicom/UBICOM32Tools

#
# There's a lot of elaborate setup for perl here, because we need to cause a few 
# command-line options to be passed to it whenever it is invoked: it's a nonstandard
# Cygwin installation and needs to be spoon-fed its library modules.
#
PERL_CMD := perl
PERL_LIB_DIRS := \
	5.8 \
	5.8/cygwin \
	site_perl/5.8 \
	5.8/cygwin-thread-multi-64int \
	site_perl/5.8/cygwin-thread-multi-64int

PERL_BASE_DIR := $(UBICOM_TOOLCHAIN_DIR)/H-i686-pc-cygwin32/lib/perl5
PERL_INCLUDES := $(addprefix $(PERL_BASE_DIR)/, $(PERL_LIB_DIRS))
PERL_FLAGS += $(addprefix -I, $(PERL_INCLUDES))

PERL := $(PERL_CMD) $(PERL_FLAGS)

UNAME_VAL := $(shell uname -a)
# local variable for architecture target/location
OS_ENV := $(if $(findstring Cygwin, $(UNAME_VAL)),Cygwin,Linux)
ifeq ($(OS_ENV),Cygwin)
	PATH_CONV_FILE := cygpath -wa -f 
	OS_ENV := win32
	RANLIB := ls
else
	PATH_CONV_FILE := cat
	OS_ENV := $(shell uname)
# keep old usage fashion. New platforms use nature uname value
ifeq ($(OS_ENV),Linux)
	OS_ENV := linux
endif
	RANLIB := ranlib
endif

BINDIR ?= bin/$(OS_ENV)
BINSUF := $(if $(findstring Cygwin, $(UNAME_VAL)),.exe,)
PLATFORM_FLAGS := $(if $(findstring Cygwin, $(UNAME_VAL)),-mno-cygwin,)

# customer suffixs -- used to simplify Mf for multiple entries.
# See sdk/project/posix/posix/test/Makefile for usage
.SUFFIXES:	.o .out .so .cpp .java .class .app

