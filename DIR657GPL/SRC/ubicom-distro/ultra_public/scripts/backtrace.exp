#!/usr/bin/expect --
# gets a backtrace using gdb
# Usage : expect backtrace.exp \"ARCH\" \"ELF_FILE\" \[ETH_DONGLE_IP_ADDRESS\]
set CmdLnPrms [llength $argv]
if {$CmdLnPrms == 0} {
	puts "\nUsage: expect backtrace.exp \"ARCH\" \"ELF_FILE\" \[ETH_DONGLE_IP_ADDRESS\]"
	exit 1
}

set B_ARCH [lindex $argv 0]
set ELF_FILE [lindex $argv 1]
if {$CmdLnPrms == 3} {
    set TARGET_STRING [lindex $argv 2]:5010
} else {
   set TARGET_STRING $env(UBICOM_DONGLE)
}

#Replace all two/more backslashes with one backslash
regsub -all {\\\\([^/])|\\\\$} $ELF_FILE {\\\1} ELF_FILE
#Replace all one backslash with two backslashes
regsub -all {\\([^/])|\\$} $ELF_FILE {\\\\\1} ELF_FILE

if {![string compare $B_ARCH IP2K]} {
	set gdbid [spawn -nottyinit ip2k-elf-gdb --quiet]
	set dot_count 80

} else {
	set gdbid [spawn -nottyinit ip3k-elf-gdb --quiet]
	set dot_count 160
}
expect "(gdb)"
send "file $ELF_FILE\r"
expect "(gdb)"
send "target $B_ARCH $TARGET_STRING\r"
expect {
	-re "\[uU\]nable to" {
		exec kill $gdbid
		exit 1
	}
	"(gdb)" {
		send "bt\r"
		expect "(gdb)"
		send "quit\r"
	}
	timeout {
		exec kill $gdbid
		puts "\nCannot connect to target\n"
		exit 1
	}
}
close; wait

